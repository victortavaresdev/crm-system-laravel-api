## Autogenerated by Scribe. DO NOT MODIFY.

name: 'User endpoints'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{user_id}'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'GET User'
      description: 'Get user data.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 999ba4d6-07b3-44a8-b71e-1ed8476831f3
        type: string
        custom: []
    cleanUrlParameters:
      user_id: 999ba4d6-07b3-44a8-b71e-1ed8476831f3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"OK"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "Forbidden"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PVf5vhad6a4cD6ekZb81gE3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{user_id}/update'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'PUT User'
      description: 'Update user data.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 999ba4d6-07b3-44a8-b71e-1ed8476831f3
        type: string
        custom: []
    cleanUrlParameters:
      user_id: 999ba4d6-07b3-44a8-b71e-1ed8476831f3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: iyvtwzvhyhphux
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xvbvrnynravhmxgebzjr
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: david.lockman@example.org
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters. Must not be greater than 255 characters.'
        required: true
        example: 'm-S{vBt'
        type: string
        custom: []
      address:
        name: address
        description: 'Must not be greater than 255 characters.'
        required: true
        example: ptopwkunxngajm
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'Must not be greater than 255 characters.'
        required: true
        example: jezuxxgsdkcvtxeoxblblg
        type: string
        custom: []
    cleanBodyParameters:
      first_name: iyvtwzvhyhphux
      last_name: xvbvrnynravhmxgebzjr
      email: david.lockman@example.org
      password: 'm-S{vBt'
      address: ptopwkunxngajm
      phone_number: jezuxxgsdkcvtxeoxblblg
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"OK"}'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{"message": "Bad Request"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "Forbidden"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 34DZka8Edvhe16fPc6V5abg'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/users/{user_id}/delete'
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'DELETE User'
      description: 'Delete user data.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      user_id:
        name: user_id
        description: 'The ID of the user.'
        required: true
        example: 999ba4d6-07b3-44a8-b71e-1ed8476831f3
        type: string
        custom: []
    cleanUrlParameters:
      user_id: 999ba4d6-07b3-44a8-b71e-1ed8476831f3
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{"message":"OK"}'
        headers: []
        description: ''
        custom: []
      -
        status: 401
        content: '{"message": "Unauthenticated"}'
        headers: []
        description: ''
        custom: []
      -
        status: 403
        content: '{"message": "Forbidden"}'
        headers: []
        description: ''
        custom: []
      -
        status: 404
        content: '{"message": "Not Found"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aeEab145c6Ddkf3hVZPg8v6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/create
    metadata:
      groupName: 'User endpoints'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'POST User'
      description: 'Create a new user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      first_name:
        name: first_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: bvxfifqhqgmulhnntzrhxiszb
        type: string
        custom: []
      last_name:
        name: last_name
        description: 'Must not be greater than 255 characters.'
        required: true
        example: xjgccpa
        type: string
        custom: []
      email:
        name: email
        description: 'Must be a valid email address. Must not be greater than 255 characters.'
        required: true
        example: purdy.issac@example.net
        type: string
        custom: []
      password:
        name: password
        description: 'Must be at least 6 characters. Must not be greater than 255 characters.'
        required: true
        example: 'U[+:N\ah7Uzqbv'
        type: string
        custom: []
      address:
        name: address
        description: 'Must not be greater than 255 characters.'
        required: true
        example: cqq
        type: string
        custom: []
      phone_number:
        name: phone_number
        description: 'Must not be greater than 255 characters.'
        required: true
        example: kpwqwryazqesgbiimhs
        type: string
        custom: []
    cleanBodyParameters:
      first_name: bvxfifqhqgmulhnntzrhxiszb
      last_name: xjgccpa
      email: purdy.issac@example.net
      password: 'U[+:N\ah7Uzqbv'
      address: cqq
      phone_number: kpwqwryazqesgbiimhs
    fileParameters: []
    responses:
      -
        status: 201
        content: '{"message":"Created"}'
        headers: []
        description: ''
        custom: []
      -
        status: 400
        content: '{"message": "Bad Request"}'
        headers: []
        description: ''
        custom: []
      -
        status: 409
        content: '{"message": "Conflict"}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
